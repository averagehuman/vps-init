#!/bin/sh

###############################################################################
#
# devpi-server install script
#
# devpi-server is a caching PyPi proxy, it makes Python package installation
# more reliable and much faster.
#
# Usage:
#
#     $ sudo ./devpi-installer
#
# This script is a deploy utility, see https://github.com/averagehuman/devpi-installer
# for the actual installer.
#
# IMPORTANT: the installer expects more recent pip, setuptools and virtualenv
# packages than the OS provides by default. Upgrade to latest tools as follows:
#
#   $ apt-get -y install python-setuptools #if easy_install is not available
#   $ easy_install -U pip
#   $ pip install -U setuptools
#   $ apt-get -y remove python-setuptools
#   $ pip install -U virtualenv

# Tested on Ubuntu 12.04 with Python 2.7 and devpi-server 1.1
#
###############################################################################

set -e

pyversion=$(python -c "import sys;print('%s.%s' % sys.version_info[:2])")
devpi_version="1.1"
devpi_port=3131
devpi_datadir="/var/devpi"
venv_root="/srv/python$pyversion"
server_root="$venv_root/var/devpi/$devpi_version"

###############################################################################
# create app user 
###############################################################################
if [ ! $(grep '^devpi:' /etc/passwd) ]; then
    useradd -r -M -s /bin/false -d /nonexistent devpi
fi

passwd -l devpi

###############################################################################
# create virtualenv
###############################################################################
if [ ! -e "$venv_root" ]; then
    virtualenv "$venv_root"
fi

###############################################################################
# download devpi-installer
###############################################################################
rm -rf $server_root
mkdir -p $venv_root/var/devpi
rm -rf devpi-installer-master
wget -O devpi-installer.zip https://github.com/averagehuman/devpi-installer/archive/master.zip
unzip devpi-installer.zip
mv devpi-installer-master $server_root
rm -f devpi-installer.zip

###############################################################################
# update base.cfg
###############################################################################

cat > $server_root/base.cfg <<EOF

[cfg]
version = $devpi_version
host=localhost
port=$devpi_port
outside_url=
bottleserver=auto
debug=0
refresh=60
bypass_cdn=0
secretfile=.secret
serverdir=$devpi_datadir
aliasdir=/srv/devpi-server
user=devpi
group=devpi

EOF

###############################################################################
# install
###############################################################################
cd $server_root && make deploy

cp $server_root/etc/devpi.upstart /etc/init/devpi-server.conf

if [ -h /srv/devpi-server ]; then
    rm /srv/devpi-server
fi

if [ ! -e /srv/devpi-server ]; then
    ln -s $server_root /srv/devpi-server
fi

chown -R devpi:devpi $venv_root/var/devpi
chown -R devpi:devpi $devpi_datadir

###############################################################################
# user info
###############################################################################

index_url="http://localhost:$devpi_port/root/pypi/+simple/"

cat <<EOF

devpi-server v$devpi_version has been installed. Start it with

    service devpi-server start

To use devpi as a proxy update '~/.buildout/default.cfg' with

    [buildout]
    index = $index_url

and update '~/.pip/pip.conf' with

    [global]
    index-url = $index_url

EOF


