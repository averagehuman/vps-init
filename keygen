#!/bin/bash

set -e

servername="${1:-server}"

dir1=keys/${servername}-admin-keys
dir2=keys/${servername}-deployer-keys
reply1=""
reply2=""
reply3=""
comment1="server admin key - copy public/private pair to remote host and public key to repository provider, eg. github"
comment2="deployer key - copy public/private pair to local .ssh directory and public key to remote authorized_keys file"
pass1=""
pass2=""


for d in $dir1 $dir2; do
    if [ -e $d ]; then
        rm -rf $d
    fi
    mkdir -p $d
done

ensure_passphrase () {
    if [ -z $pass1 ]; then
        if [ -e ".passphrase" ]; then
            pass1=$(tr -d '\n' < .passphrase)
        else
            echo -n "Passphrase for new keys: "

            stty -echo
            read pass1
            stty echo
            echo ""

            if [ "$pass1" != "" ]; then
                echo -n "Passphrase (again): "

                stty -echo
                read pass2
                stty echo
                echo ""

                if [ "$pass1" != "$pass2" ];then
                    echo "ERROR: passphrases didn't match"
                    exit 1
                fi
            fi
            echo "$pass1" > .passphrase
        fi
    fi
}

ensure_passphrase

adminkey="$HOME/.ssh/${servername}-admin.key"
if [ -e $adminkey ] && [ -e $adminkey.pub ]; then
    until [ "$reply1" = "y" ] || [ "$reply1" = "n" ]; do
        echo -n "Use existing key '$adminkey'? (y/n) "
        read reply1
    done
    if [ "$reply1" = "y" ]; then
        cp $adminkey $dir1
        cp $adminkey.pub $dir1
    fi
fi

if [ ! -e $dir1/${servername}-admin.key ]; then
    ssh-keygen -q -C "$comment1" -f $dir1/${servername}-admin.key -P "$pass1"
fi

deployerkey="$HOME/.ssh/${servername}-deployer.key"
if [ -e $deployerkey ] && [ -e $deployerkey.pub ]; then
    until [ "$reply2" = "y" ] || [ "$reply2" = "n" ]; do
        echo -n "Use existing key '$deployerkey'? (y/n) "
        read reply2
    done
    if [ "$reply2" = "y" ]; then
        cp $deployerkey $dir2
        cp $deployerkey.pub $dir2
    fi
fi

if [ ! -e $dir2/${servername}-deployer.key ]; then
    ssh-keygen -q -C "$comment2" -f $dir2/${servername}-deployer.key -P "$pass1"
fi

cp $dir2/${servername}-deployer.key.pub tools/etc/authorized_keys

set +e
sync=0
for user in ${servername}-admin ${servername}-deployer; do
    # cmp returns 1 for 'files are different', 2 for 'problem', otherwise 0
    cmp $HOME/.ssh/$user.key keys/$user-keys/$user.key > /dev/null 2>&1
    sync=$? || $sync
    cmp $HOME/.ssh/$user.key.pub keys/$user-keys/$user.key.pub > /dev/null 2>&1
    sync=$? || $sync
done
set -e

if [ $sync -gt 0 ]; then
    until [ "$reply3" = "y" ] || [ "$reply3" = "n" ]; do
        echo -n "Copy new keys to local '$HOME/.ssh', overwriting if necessary? (y/n) "
        read reply3
    done
    if [ "$reply3" = "y" ]; then
        for user in ${servername}-admin ${servername}-deployer; do
            cp keys/$user-keys/$user.key $HOME/.ssh/$user.key
            cp keys/$user-keys/$user.key.pub $HOME/.ssh/$user.key.pub
        done
    fi
fi

cd keys
for user in ${servername}-admin ${servername}-deployer; do
    if [ -e $user-keys.zip ]; then
        mv $user-keys.zip $user-keys.old.zip
    fi
    zip -r -0 -e -P "$pass1" -q $user-keys.zip $user-keys
done
cd ..
rm -rf $dir1
rm -rf $dir2

